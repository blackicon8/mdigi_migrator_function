// <auto-generated />
using System;
using AzureFunctionApp.Persistence;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Metadata;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;

#nullable disable

namespace AzureFunctionApp.Persistence.Migrations
{
    [DbContext(typeof(AppDbContext))]
    partial class AppDbContextModelSnapshot : ModelSnapshot
    {
        protected override void BuildModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("ProductVersion", "6.0.25")
                .HasAnnotation("Relational:MaxIdentifierLength", 128);

            SqlServerModelBuilderExtensions.UseIdentityColumns(modelBuilder, 1L, 1);

            modelBuilder.Entity("AzureFunctionApp.Domain.Resources.AdRun", b =>
                {
                    b.Property<string>("Id")
                        .HasColumnType("nvarchar(450)");

                    b.Property<string>("BookingComment")
                        .HasColumnType("nvarchar(256)");

                    b.Property<string>("CampaignId")
                        .HasColumnType("nvarchar(450)");

                    b.Property<string>("ClientComment")
                        .HasColumnType("nvarchar(256)");

                    b.Property<string>("Currency")
                        .HasColumnType("nvarchar(5)");

                    b.Property<string>("CustomId")
                        .HasColumnType("nvarchar(256)");

                    b.Property<DateTime?>("EndDate")
                        .HasColumnType("datetime2");

                    b.Property<double?>("EstimatedAV")
                        .HasColumnType("float");

                    b.Property<int?>("EstimatedCT")
                        .HasColumnType("int");

                    b.Property<double?>("EstimatedCTR")
                        .HasColumnType("float");

                    b.Property<double?>("EstimatedLead")
                        .HasColumnType("float");

                    b.Property<string>("FinanceComment")
                        .HasColumnType("nvarchar(256)");

                    b.Property<string>("Format")
                        .HasColumnType("nvarchar(256)");

                    b.Property<string>("MediaType")
                        .HasColumnType("nvarchar(256)");

                    b.Property<double?>("NetNet")
                        .HasColumnType("float");

                    b.Property<string>("Placement")
                        .HasColumnType("nvarchar(256)");

                    b.Property<string>("SalesHouse")
                        .HasColumnType("nvarchar(256)");

                    b.Property<string>("Site")
                        .HasColumnType("nvarchar(256)");

                    b.Property<DateTime?>("StartDate")
                        .HasColumnType("datetime2");

                    b.Property<double?>("SumRatecard")
                        .HasColumnType("float");

                    b.Property<string>("UnitType")
                        .HasColumnType("nvarchar(256)");

                    b.Property<int?>("Units")
                        .HasColumnType("int");

                    b.HasKey("Id");

                    b.HasIndex("CampaignId");

                    b.ToTable("AdRuns", (string)null);
                });

            modelBuilder.Entity("AzureFunctionApp.Domain.Resources.Brand", b =>
                {
                    b.Property<string>("Id")
                        .HasColumnType("nvarchar(450)");

                    b.Property<string>("ClientId")
                        .HasColumnType("nvarchar(450)");

                    b.Property<string>("Name")
                        .HasColumnType("nvarchar(256)");

                    b.HasKey("Id");

                    b.HasIndex("ClientId");

                    b.ToTable("Brands", (string)null);
                });

            modelBuilder.Entity("AzureFunctionApp.Domain.Resources.Campaign", b =>
                {
                    b.Property<string>("Id")
                        .HasColumnType("nvarchar(450)");

                    b.Property<DateTime?>("ArchivedAt")
                        .HasColumnType("datetime2");

                    b.Property<string>("BrandId")
                        .HasColumnType("nvarchar(450)");

                    b.Property<double?>("Budget")
                        .HasColumnType("float");

                    b.Property<string>("BudgetType")
                        .HasColumnType("nvarchar(256)");

                    b.Property<DateTime>("CreatedAt")
                        .HasColumnType("datetime2");

                    b.Property<string>("CustomId")
                        .HasColumnType("nvarchar(256)");

                    b.Property<DateTime>("EndDate")
                        .HasColumnType("datetime2");

                    b.Property<string>("Name")
                        .HasColumnType("nvarchar(256)");

                    b.Property<string>("Planner")
                        .HasColumnType("nvarchar(256)");

                    b.Property<DateTime>("StartDate")
                        .HasColumnType("datetime2");

                    b.Property<string>("State")
                        .HasColumnType("nvarchar(256)");

                    b.Property<DateTime?>("UpdatedAt")
                        .HasColumnType("datetime2");

                    b.Property<int>("Version")
                        .HasColumnType("int");

                    b.HasKey("Id");

                    b.HasIndex("BrandId");

                    b.ToTable("Campaigns", (string)null);
                });

            modelBuilder.Entity("AzureFunctionApp.Domain.Resources.Client", b =>
                {
                    b.Property<string>("Id")
                        .HasColumnType("nvarchar(450)");

                    b.Property<string>("Name")
                        .HasColumnType("nvarchar(256)");

                    b.HasKey("Id");

                    b.ToTable("Clients", (string)null);
                });

            modelBuilder.Entity("AzureFunctionApp.Domain.Resources.Job", b =>
                {
                    b.Property<string>("Id")
                        .HasColumnType("nvarchar(450)");

                    b.Property<string>("CampaignId")
                        .HasColumnType("nvarchar(450)");

                    b.Property<string>("ChannelId")
                        .HasColumnType("nvarchar(256)");

                    b.Property<string>("Code")
                        .HasColumnType("nvarchar(256)");

                    b.Property<int>("JobId")
                        .HasColumnType("int");

                    b.Property<string>("Name")
                        .HasColumnType("nvarchar(256)");

                    b.Property<string>("Type")
                        .HasColumnType("nvarchar(256)");

                    b.HasKey("Id");

                    b.HasIndex("CampaignId");

                    b.ToTable("Jobs", (string)null);
                });

            modelBuilder.Entity("AzureFunctionApp.Domain.Resources.Service", b =>
                {
                    b.Property<string>("Id")
                        .HasColumnType("nvarchar(450)");

                    b.Property<string>("AdvertisingCode")
                        .HasColumnType("nvarchar(256)");

                    b.Property<string>("AgencyId")
                        .HasColumnType("nvarchar(256)");

                    b.Property<bool>("AllowInvoiceOverride")
                        .HasColumnType("bit");

                    b.Property<DateTime>("BuyingPeriodEnd")
                        .HasColumnType("datetime2");

                    b.Property<DateTime>("BuyingPeriodStart")
                        .HasColumnType("datetime2");

                    b.Property<string>("CampaignId")
                        .HasColumnType("nvarchar(450)");

                    b.Property<string>("CustomId")
                        .HasColumnType("nvarchar(256)");

                    b.Property<int>("DealerId")
                        .HasColumnType("int");

                    b.Property<double>("DiscountPercentage")
                        .HasColumnType("float");

                    b.Property<int>("MediumId")
                        .HasColumnType("int");

                    b.Property<double>("Price")
                        .HasColumnType("float");

                    b.Property<string>("ServiceId")
                        .HasColumnType("nvarchar(256)");

                    b.Property<string>("ServiceName")
                        .HasColumnType("nvarchar(256)");

                    b.Property<bool>("SkipBuying")
                        .HasColumnType("bit");

                    b.Property<int>("TechnicalCostId")
                        .HasColumnType("int");

                    b.Property<int>("Units")
                        .HasColumnType("int");

                    b.HasKey("Id");

                    b.HasIndex("CampaignId");

                    b.ToTable("Services", (string)null);
                });

            modelBuilder.Entity("AzureFunctionApp.Domain.Resources.Size", b =>
                {
                    b.Property<string>("Id")
                        .HasColumnType("nvarchar(450)");

                    b.Property<string>("AdRunId")
                        .HasColumnType("nvarchar(450)");

                    b.Property<string>("FormatId")
                        .HasColumnType("nvarchar(256)");

                    b.Property<bool>("IsCustom")
                        .HasColumnType("bit");

                    b.Property<string>("Name")
                        .HasColumnType("nvarchar(256)");

                    b.Property<string>("SizeId")
                        .HasColumnType("nvarchar(256)");

                    b.HasKey("Id");

                    b.HasIndex("AdRunId");

                    b.ToTable("Sizes", (string)null);
                });

            modelBuilder.Entity("AzureFunctionApp.Domain.Resources.WeeklyBreakdown", b =>
                {
                    b.Property<string>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("nvarchar(450)");

                    b.Property<string>("AdRunId")
                        .HasColumnType("nvarchar(450)");

                    b.Property<string>("CustomId")
                        .HasColumnType("nvarchar(256)");

                    b.Property<double?>("NetNet")
                        .HasColumnType("float");

                    b.Property<int>("Units")
                        .HasColumnType("int");

                    b.Property<int>("Week")
                        .HasColumnType("int");

                    b.Property<int>("Year")
                        .HasColumnType("int");

                    b.HasKey("Id");

                    b.HasIndex("AdRunId");

                    b.ToTable("WeeklyBreakdowns", (string)null);
                });

            modelBuilder.Entity("AzureFunctionApp.Domain.Resources.AdRun", b =>
                {
                    b.HasOne("AzureFunctionApp.Domain.Resources.Campaign", "Campaign")
                        .WithMany("AdRuns")
                        .HasForeignKey("CampaignId");

                    b.Navigation("Campaign");
                });

            modelBuilder.Entity("AzureFunctionApp.Domain.Resources.Brand", b =>
                {
                    b.HasOne("AzureFunctionApp.Domain.Resources.Client", "Client")
                        .WithMany("Brands")
                        .HasForeignKey("ClientId");

                    b.Navigation("Client");
                });

            modelBuilder.Entity("AzureFunctionApp.Domain.Resources.Campaign", b =>
                {
                    b.HasOne("AzureFunctionApp.Domain.Resources.Brand", "Brand")
                        .WithMany("Campaigns")
                        .HasForeignKey("BrandId");

                    b.Navigation("Brand");
                });

            modelBuilder.Entity("AzureFunctionApp.Domain.Resources.Job", b =>
                {
                    b.HasOne("AzureFunctionApp.Domain.Resources.Campaign", "Campaign")
                        .WithMany("Jobs")
                        .HasForeignKey("CampaignId");

                    b.Navigation("Campaign");
                });

            modelBuilder.Entity("AzureFunctionApp.Domain.Resources.Service", b =>
                {
                    b.HasOne("AzureFunctionApp.Domain.Resources.Campaign", "Campaign")
                        .WithMany("Services")
                        .HasForeignKey("CampaignId");

                    b.Navigation("Campaign");
                });

            modelBuilder.Entity("AzureFunctionApp.Domain.Resources.Size", b =>
                {
                    b.HasOne("AzureFunctionApp.Domain.Resources.AdRun", "AdRun")
                        .WithMany("Sizes")
                        .HasForeignKey("AdRunId");

                    b.Navigation("AdRun");
                });

            modelBuilder.Entity("AzureFunctionApp.Domain.Resources.WeeklyBreakdown", b =>
                {
                    b.HasOne("AzureFunctionApp.Domain.Resources.AdRun", "AdRun")
                        .WithMany("WeeklyBreakdowns")
                        .HasForeignKey("AdRunId");

                    b.Navigation("AdRun");
                });

            modelBuilder.Entity("AzureFunctionApp.Domain.Resources.AdRun", b =>
                {
                    b.Navigation("Sizes");

                    b.Navigation("WeeklyBreakdowns");
                });

            modelBuilder.Entity("AzureFunctionApp.Domain.Resources.Brand", b =>
                {
                    b.Navigation("Campaigns");
                });

            modelBuilder.Entity("AzureFunctionApp.Domain.Resources.Campaign", b =>
                {
                    b.Navigation("AdRuns");

                    b.Navigation("Jobs");

                    b.Navigation("Services");
                });

            modelBuilder.Entity("AzureFunctionApp.Domain.Resources.Client", b =>
                {
                    b.Navigation("Brands");
                });
#pragma warning restore 612, 618
        }
    }
}
